```{r skewness}
DataExplorer::plot_missing(sick_tidy)
DataExplorer::plot_missing(sick_tidy)
## Solution
```{r missing}
plot_missing(sick_tidy[!is.na(sick_tidy$T3), ])
without_T3 <- sick_tidy[is.na(sick_tidy$T3), ] %>%
select(-T3) %>%
na.exclude()
sick_tidy <- sick_tidy %>% na.exclude()
sick_tidy <- sick_tidy %>% na.exclude()
# Skewness reduction
## Exploration
```{r skewness2}
skewness <- sapply(9:13, function(i) {
c(column = i,
skewness = skewness(sick_tidy[,i]),
skewness_log = skewness(log(sick_tidy[,i])),
skewness_sqrt = skewness(sqrt(sick_tidy[,i])))
})
s <- as.data.frame(t(skewness))
s$column <- names(sick_tidy)[s$column ]
kable(s)
kable(s)
## Solution
```{r missing}
sick_t <- sick_tidy %>%
mutate(log_TSH = log(TSH),
sqrt_T3 = sqrt(T3),
sqrt_TT4 = sqrt(TT4),
log_T4U = log(T4U),
sqrt_FTI = sqrt(FTI)) %>%
select(-TSH, -T3, -TT4, -T4U, -FTI)
before <- ggpairs(sick_tidy[, 9:13], aes(colour=sick_tidy$Class))
after <- ggpairs(sick_t[, 11:15], aes(colour=sick_t$Class))
before <- ggpairs(sick_tidy[, 9:13], aes(colour=sick_tidy$Class))
after <- ggpairs(sick_t[, 11:15], aes(colour=sick_t$Class))
Before the transformation:
```{r}
before
before
After the transformation:
```{r}
after
after
# Classes Balance
Klasy nie są zbalansowane:
```{r}
ggplot(sick_t, aes(x=1, fill=(sick_t$Class == 'sick'))) + geom_bar(position="fill") +
scale_fill_discrete(name="Is sick") +
coord_flip() +
theme_minimal() +
theme(aspect.ratio = 0.2,
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
ylab("Ratio")
```
# Corelations
## Exploration
```{r skewness}
## Solution
```{r missing}
cor(sick_tidy[, 17:21])
plot_bar(sick)
# Modele
```{r}
library(mlr)
task <- makeClassifTask(data = sick_t, target = "Class")
rdesc <- makeResampleDesc("CV", iters=5)
## Regresja logistyczna
```{r}
lr <- makeLearner("classif.binomial", predict.type = 'prob')
r <- resample(lr, task, rdesc, measures = list(auc, auprc))
## Drzewo
library(rpart)
library(rpart.plot)
?rpart
rp <- rpart(Class ~., data=sick_t)
summary(rp)
rpart.plot(rp)
1 - mean(abs(round(predict(rp)[,2]) - (sick_t$Class == "sick")))
s<- predict(rp)
s[,2]
1 - mean(abs(round(predict(rp)[,2]) - (sick_t$Class == "sick")))
s<- predict(rp)
s[,2]
r <- resample(lr, task, rdesc, measures = list(auc, auprc))
r <- resample(lr, task, rdesc, measures = list(auc, auprc))
library(mlr)
library(mlr3)
library(mlr)
install.packages("mlr")
library(mlr)
#knitr::opts_chunk$set(echo = TRUE, fig.height=3, fig.width=5)
source("data_load.R")
library(ggplot2)
knitr::kable(ohms, caption = "Wartości pomiaru napięcia i natężenia na czwartym oporniku.", label="R4")
ohms$`zakres napięcia`
delta_x <- ohms$`zakres napięcia` / 1000
(u_b <- sqrt((delta_x/sqrt(3))^2 + (0.5 * delta_x/sqrt(3))^2))
delta_z
### Zastosowanie metody najmniejszych kwadratów
delta_x
### Zastosowanie metody najmniejszych kwadratów
delta_x
ohms$`zakres napięcia`
delta_x <- ohms$`zakres napięcia` / 100
u_b_nap <- sqrt((delta_x/sqrt(3))^2 + (0.5 * delta_x/sqrt(3))^2)
ohms$`zakres natężenia`
ohms$`zakres natężenia`[1]
ohms$`zakres natężenia`[1][4]
ohms$`zakres natężenia`[1][3]
ohms$`zakres natężenia`[1][3]
ohms$`zakres natężenia`[1]
library(stringr)
str_sub(ohms$`zakres natężenia`[1])
str_sub(ohms$`zakres natężenia`[1], end=-1)
str_sub(ohms$`zakres natężenia`[1], end=-2)
str_sub(ohms$`zakres natężenia`, end=-2)
as.numeric(str_sub(ohms$`zakres natężenia`, end=-2))
delta_x <- as.numeric(str_sub(ohms$`zakres natężenia`, end=-2)) / 1000 / 100
delta_x
delta_x <- ohms$`zakres natężenia`
ohms$`zakres natężenia`
as.numeric(str_sub(ohms$`zakres natężenia`, end=-2))
as.numeric(str_sub(ohms$`zakres natężenia`, end=-2))/2
as.numeric(str_sub(ohms$`zakres natężenia`, end=-2))/2000
dgt <- as.numeric(str_sub(ohms$`zakres natężenia`, end=-2))/2000
dgt <- as.numeric(str_sub(ohms$`zakres natężenia`, end=-2))/2000
dgt
dgt <- as.numeric(str_sub(ohms$`zakres natężenia`, end=-2))/2000
as.numeric(str_sub(ohms$`zakres natężenia`, end=-2))/2000
ohms$`zakres natężenia`
delta_I <- ohms$`natężenie [mA]`
ohms$`natężenie [mA]`
delta_I <- ifelse(ohms$`zakres natężenia` == "200m",  0.012*ohms$`natężenie [mA]`, 0.005*ohms$`natężenie [mA]`)
delta_I
u_b_nat <- delta_I/sqrt(3)
u_b_nat <- delta_I/sqrt(3)
u_b_nat
ohms$`zakres natężenia`
ohms$`zakres napięcia`
delta_x <- ohms$`zakres napięcia` / 100
u_b_nap <- sqrt((delta_x/sqrt(3))^2 + (0.5 * delta_x/sqrt(3))^2)
u_b_nap
delta_U <- ohms$`zakres napięcia` / 100
u_b_U <- sqrt((delta_U/sqrt(3))^2 + (0.5 * delta_U/sqrt(3))^2)
dgt <- as.numeric(str_sub(ohms$`zakres natężenia`, end=-2))/2000
delta_I <- ifelse(ohms$`zakres natężenia` == "200m",  0.012*ohms$`natężenie [mA]`, 0.005*ohms$`natężenie [mA]`)
delta_I
u_b_I <- delta_I/sqrt(3)
delta_U
ohms$`zakres napięcia`
c(.5,.5,.5,.2,.2,.2,.2,.2,.2, 0.05, 0.05, 0.02, 0.5 )
ohms$`zakres napięcia`
c(.5,.5,.5,.2,.2,.2,.2,.2,.2, 0.05, 0.05, 0.02, 0.5 )/2
par <- c(.5,.5,.5,.2,.2,.2,.2,.2,.2, 0.05, 0.05, 0.02, 0.5 )/2
u_b_U <- sqrt((delta_U/sqrt(3))^2 + (par/sqrt(3))^2)
u_b_U
delta_U <- ohms$`zakres napięcia` / 100
par <- c(.5,.5,.5,.2,.2,.2,.2,.2,.2, 0.05, 0.05, 0.02, 0.5 )/2
u_b_U <- sqrt((delta_U/sqrt(3))^2 + (par/sqrt(3))^2)
u_b_U
dgt <- as.numeric(str_sub(ohms$`zakres natężenia`, end=-2))/2000
delta_I <- ifelse(ohms$`zakres natężenia` == "200m",  0.012*ohms$`natężenie [mA]`, 0.005*ohms$`natężenie [mA]`)
delta_I
u_b_I <- delta_I/sqrt(3)
ggplot(ohms, aes(x=`natężenie [mA]`, y=`napięcie [V]`, colour=as.factor(`zakres napięcia`))) +
geom_point() +
labs(colour = "Zakres napięcia")
ggplot(ohms, aes(x=`natężenie [mA]`, y=`napięcie [V]`, colour=as.factor(`zakres napięcia`))) +
geom_point() +
labs(colour = "Zakres napięcia") +
geom_rect(xmin = `natężenie [mA]` - u_b_I/2,
xmax = `natężenie [mA]` - u_b_I/2,
ymin = `napięcie [V]` - u_b_U/2,
xmax = `napięcie [V]` - u_b_U/2,)
ggplot(ohms, aes(x=`natężenie [mA]`, y=`napięcie [V]`, colour=as.factor(`zakres napięcia`))) +
geom_point() +
labs(colour = "Zakres napięcia") +
geom_rect(xmin = ohms$`natężenie [mA]` - u_b_I/2,
xmax = ohms$`natężenie [mA]` - u_b_I/2,
ymin = ohms$`napięcie [V]` - u_b_U/2,
xmax = ohms$`napięcie [V]` - u_b_U/2,)
ggplot(ohms, aes(x=`natężenie [mA]`, y=`napięcie [V]`, colour=as.factor(`zakres napięcia`))) +
geom_point() +
labs(colour = "Zakres napięcia") +
geom_rect(aes(xmin = ohms$`natężenie [mA]` - u_b_I/2,
xmax = ohms$`natężenie [mA]` - u_b_I/2,
ymin = ohms$`napięcie [V]` - u_b_U/2,
xmax = ohms$`napięcie [V]` - u_b_U/2))
ggplot(ohms, aes(x=`natężenie [mA]`, y=`napięcie [V]`, colour=as.factor(`zakres napięcia`))) +
geom_point() +
labs(colour = "Zakres napięcia") +
geom_rect(aes(xmin = ohms$`natężenie [mA]` - u_b_I/2,
xmax = ohms$`natężenie [mA]` - u_b_I/2,
ymin = ohms$`napięcie [V]` - u_b_U/2,
ymax = ohms$`napięcie [V]` - u_b_U/2))
ggplot(ohms, aes(x=`natężenie [mA]`, y=`napięcie [V]`, colour=as.factor(`zakres napięcia`))) +
geom_point() +
labs(colour = "Zakres napięcia") +
# geom_rect(aes(xmin = ohms$`natężenie [mA]` - u_b_I/2,
#           xmax = ohms$`natężenie [mA]` - u_b_I/2,
#           ymin = ohms$`napięcie [V]` - u_b_U/2,
#           ymax = ohms$`napięcie [V]` - u_b_U/2))
geom_errorbar(aes(ymin = ohms$`napięcie [V]` - u_b_U/2,
ymax = ohms$`napięcie [V]` - u_b_U/2))
ggplot(ohms, aes(x=`natężenie [mA]`, y=`napięcie [V]`, colour=as.factor(`zakres napięcia`))) +
geom_point() +
labs(colour = "Zakres napięcia") +
# geom_rect(aes(xmin = ohms$`natężenie [mA]` - u_b_I/2,
#           xmax = ohms$`natężenie [mA]` - u_b_I/2,
#           ymin = ohms$`napięcie [V]` - u_b_U/2,
#           ymax = ohms$`napięcie [V]` - u_b_U/2))
geom_errorbar(aes(ymin = ohms$`napięcie [V]` - u_b_U/2,
ymax = ohms$`napięcie [V]` - u_b_U/2)) +
geom_errorbar(aes(xmin = ohms$`natężenie [mA]` - u_b_I/2,
xmax = ohms$`natężenie [mA]` - u_b_I/2))
ggplot(ohms, aes(x=`natężenie [mA]`, y=`napięcie [V]`, colour=as.factor(`zakres napięcia`))) +
geom_point() +
labs(colour = "Zakres napięcia") +
# geom_rect(aes(xmin = ohms$`natężenie [mA]` - u_b_I/2,
#           xmax = ohms$`natężenie [mA]` - u_b_I/2,
#           ymin = ohms$`napięcie [V]` - u_b_U/2,
#           ymax = ohms$`napięcie [V]` - u_b_U/2))
geom_errorbar(aes(ymin = ohms$`napięcie [V]` - u_b_U/2,
ymax = ohms$`napięcie [V]` - u_b_U/2)) +
geom_errorbarh(aes(xmin = ohms$`natężenie [mA]` - u_b_I/2,
xmax = ohms$`natężenie [mA]` - u_b_I/2))
ggplot(ohms, aes(x=`natężenie [mA]`, y=`napięcie [V]`, colour=as.factor(`zakres napięcia`))) +
geom_point() +
labs(colour = "Zakres napięcia") +
# geom_rect(aes(xmin = ohms$`natężenie [mA]` - u_b_I/2,
#           xmax = ohms$`natężenie [mA]` - u_b_I/2,
#           ymin = ohms$`napięcie [V]` - u_b_U/2,
#           ymax = ohms$`napięcie [V]` - u_b_U/2))
geom_errorbar(aes(ymin = ohms$`napięcie [V]` - u_b_U/2,
ymax = ohms$`napięcie [V]` - u_b_U/2)) +
geom_errorbarh(aes(xmin = ohms$`natężenie [mA]` - u_b_I/2,
xmax = ohms$`natężenie [mA]` - u_b_I/2))
ggplot(ohms, aes(x=`natężenie [mA]`, y=`napięcie [V]`, colour=as.factor(`zakres napięcia`))) +
geom_point() +
labs(colour = "Zakres napięcia") +
# geom_rect(aes(xmin = ohms$`natężenie [mA]` - u_b_I/2,
#           xmax = ohms$`natężenie [mA]` - u_b_I/2,
#           ymin = ohms$`napięcie [V]` - u_b_U/2,
#           ymax = ohms$`napięcie [V]` - u_b_U/2))
# geom_errorbar(aes(ymin = ohms$`napięcie [V]` - u_b_U/2,
#                    ymax = ohms$`napięcie [V]` - u_b_U/2)) +
geom_errorbarh(aes(xmin = ohms$`natężenie [mA]` - u_b_I/2,
xmax = ohms$`natężenie [mA]` - u_b_I/2))
geom_errorbar(aes(ymin = ohms$`napięcie [V]` - u_b_U/2,
ymax = ohms$`napięcie [V]` - u_b_U/2)) +
ggplot(ohms, aes(x=`natężenie [mA]`, y=`napięcie [V]`, colour=as.factor(`zakres napięcia`))) +
geom_point() +
labs(colour = "Zakres napięcia") +
# geom_rect(aes(xmin = ohms$`natężenie [mA]` - u_b_I/2,
#           xmax = ohms$`natężenie [mA]` - u_b_I/2,
#           ymin = ohms$`napięcie [V]` - u_b_U/2,
#           ymax = ohms$`napięcie [V]` - u_b_U/2))
geom_errorbar(aes(ymin = ohms$`napięcie [V]` - u_b_U/2,
ymax = ohms$`napięcie [V]` - u_b_U/2)) +
geom_errorbarh(aes(xmin = ohms$`natężenie [mA]` - u_b_I/2,
xmax = ohms$`natężenie [mA]` - u_b_I/2))
ggplot(ohms, aes(x=`natężenie [mA]`, y=`napięcie [V]`, colour=as.factor(`zakres napięcia`))) +
geom_point() +
labs(colour = "Zakres napięcia") +
# geom_rect(aes(xmin = ohms$`natężenie [mA]` - u_b_I/2,
#           xmax = ohms$`natężenie [mA]` - u_b_I/2,
#           ymin = ohms$`napięcie [V]` - u_b_U/2,
#           ymax = ohms$`napięcie [V]` - u_b_U/2))
geom_errorbar(aes(ymin = ohms$`napięcie [V]` - u_b_U/2,
ymax = ohms$`napięcie [V]` - u_b_U/2)) +
geom_errorbarh(aes(xmin = ohms$`natężenie [mA]` - u_b_I/2,
xmax = ohms$`natężenie [mA]` - u_b_I/2))
ggplot(ohms, aes(x=`natężenie [mA]`, y=`napięcie [V]`, colour=as.factor(`zakres napięcia`))) +
geom_point() +
labs(colour = "Zakres napięcia") +
geom_rect(aes(xmin = ohms$`natężenie [mA]` - u_b_I/2,
xmax = ohms$`natężenie [mA]` - u_b_I/2,
ymin = ohms$`napięcie [V]` - u_b_U/2,
ymax = ohms$`napięcie [V]` - u_b_U/2))
ggplot(ohms, aes(x=`natężenie [mA]`, y=`napięcie [V]`, colour=as.factor(`zakres napięcia`))) +
geom_point() +
labs(colour = "Zakres napięcia") +
geom_rect(aes(xmin = ohms$`natężenie [mA]` - u_b_I/2,
xmax = ohms$`natężenie [mA]` + u_b_I/2,
ymin = ohms$`napięcie [V]` - u_b_U/2,
ymax = ohms$`napięcie [V]` + u_b_U/2))
ggplot(ohms, aes(x=`natężenie [mA]`, y=`napięcie [V]`, colour=as.factor(`zakres napięcia`))) +
geom_point() +
labs(colour = "Zakres napięcia") +
# geom_rect(aes(xmin = ohms$`natężenie [mA]` - u_b_I/2,
#           xmax = ohms$`natężenie [mA]` + u_b_I/2,
#           ymin = ohms$`napięcie [V]` - u_b_U/2,
#           ymax = ohms$`napięcie [V]` + u_b_U/2))
geom_errorbar(aes(ymin = ohms$`napięcie [V]` - u_b_U/2,
ymax = ohms$`napięcie [V]` + u_b_U/2)) +
geom_errorbarh(aes(xmin = ohms$`natężenie [mA]` - u_b_I/2,
xmax = ohms$`natężenie [mA]` + u_b_I/2))
u_b_I
u_b_U
ohms$`zakres natężenia`
ohms$`zakres napięcia`
ohms$`napięcie [V]`
ohms$`natężenie [mA]`
u_b_I
ggplot(ohms, aes(x=`natężenie [mA]`, y=`napięcie [V]`, colour=as.factor(`zakres napięcia`))) +
geom_point() +
labs(colour = "Zakres napięcia") +
# geom_rect(aes(xmin = ohms$`natężenie [mA]` - u_b_I/2,
#           xmax = ohms$`natężenie [mA]` + u_b_I/2,
#           ymin = ohms$`napięcie [V]` - u_b_U/2,
#           ymax = ohms$`napięcie [V]` + u_b_U/2))
geom_errorbar(aes(ymin = ohms$`napięcie [V]` - u_b_U/2,
ymax = ohms$`napięcie [V]` + u_b_U/2)) +
geom_errorbarh(aes(xmin = ohms$`natężenie [mA]` - u_b_I/2,
xmax = ohms$`natężenie [mA]` + u_b_I/2))
ggplot(ohms, aes(x=`natężenie [mA]`, y=`napięcie [V]`, colour=as.factor(`zakres napięcia`))) +
geom_point() +
labs(colour = "Zakres napięcia") +
geom_rect(aes(xmin = ohms$`natężenie [mA]` - u_b_I/2,
xmax = ohms$`natężenie [mA]` + u_b_I/2,
ymin = ohms$`napięcie [V]` - u_b_U/2,
ymax = ohms$`napięcie [V]` + u_b_U/2))
ggplot(ohms, aes(x=`natężenie [mA]`, y=`napięcie [V]`, colour=as.factor(`zakres napięcia`))) +
geom_point() +
labs(colour = "Zakres napięcia") +
geom_rect(aes(xmin = ohms$`natężenie [mA]` - u_b_I/2,
xmax = ohms$`natężenie [mA]` + u_b_I/2,
ymin = ohms$`napięcie [V]` - u_b_U/2,
ymax = ohms$`napięcie [V]` + u_b_U/2, fill=colour))
ggplot(ohms, aes(x=`natężenie [mA]`, y=`napięcie [V]`, fill ==as.factor(`zakres napięcia`), colour=as.factor(`zakres napięcia`))) +
geom_point() +
labs(colour = "Zakres napięcia") +
geom_rect(aes(xmin = ohms$`natężenie [mA]` - u_b_I/2,
xmax = ohms$`natężenie [mA]` + u_b_I/2,
ymin = ohms$`napięcie [V]` - u_b_U/2,
ymax = ohms$`napięcie [V]` + u_b_U/2, fill=colour))
ggplot(ohms, aes(x=`natężenie [mA]`, y=`napięcie [V]`, fill=as.factor(`zakres napięcia`), colour=as.factor(`zakres napięcia`))) +
geom_point() +
labs(colour = "Zakres napięcia") +
geom_rect(aes(xmin = ohms$`natężenie [mA]` - u_b_I/2,
xmax = ohms$`natężenie [mA]` + u_b_I/2,
ymin = ohms$`napięcie [V]` - u_b_U/2,
ymax = ohms$`napięcie [V]` + u_b_U/2, fill=colour))
ggplot(ohms, aes(x=`natężenie [mA]`, y=`napięcie [V]`, fill=as.factor(`zakres napięcia`), colour=as.factor(`zakres napięcia`))) +
geom_point() +
labs(colour = "Zakres napięcia") +
geom_rect(aes(xmin = ohms$`natężenie [mA]` - u_b_I/2,
xmax = ohms$`natężenie [mA]` + u_b_I/2,
ymin = ohms$`napięcie [V]` - u_b_U/2,
ymax = ohms$`napięcie [V]` + u_b_U/2))
ggplot(ohms, aes(x=`natężenie [mA]`, y=`napięcie [V]`, fill=as.factor(`zakres napięcia`), colour=as.factor(`zakres napięcia`))) +
geom_point() +
labs(colour = "Zakres napięcia") +
geom_rect(aes(xmin = ohms$`natężenie [mA]` - u_b_I/2,
xmax = ohms$`natężenie [mA]` + u_b_I/2,
ymin = ohms$`napięcie [V]` - u_b_U/2,
ymax = ohms$`napięcie [V]` + u_b_U/2)) +
guides(fill=FALSE)
ggplot(ohms, aes(x=`natężenie [mA]`, y=`napięcie [V]`, fill=as.factor(`zakres napięcia`), colour=as.factor(`zakres napięcia`))) +
geom_point() +
labs(fill = "Zakres napięcia") +
geom_rect(aes(xmin = ohms$`natężenie [mA]` - u_b_I/2,
xmax = ohms$`natężenie [mA]` + u_b_I/2,
ymin = ohms$`napięcie [V]` - u_b_U/2,
ymax = ohms$`napięcie [V]` + u_b_U/2)) +
guides(colour=FALSE)
ggplot(ohms, aes(x=`natężenie [mA]`, y=`napięcie [V]`, colour=as.factor(`zakres napięcia`))) +
geom_point() +
labs(fill = "Zakres napięcia") +
geom_rect(aes(xmin = ohms$`natężenie [mA]` - u_b_I/2,
xmax = ohms$`natężenie [mA]` + u_b_I/2,
ymin = ohms$`napięcie [V]` - u_b_U/2,
ymax = ohms$`napięcie [V]` + u_b_U/2)) +
guides(colour=FALSE)
ggplot(ohms, aes(x=`natężenie [mA]`, y=`napięcie [V]`, colour=as.factor(`zakres napięcia`))) +
geom_point() +
labs(fill = "Zakres napięcia") +
geom_rect(aes(xmin = ohms$`natężenie [mA]` - u_b_I/2,
xmax = ohms$`natężenie [mA]` + u_b_I/2,
ymin = ohms$`napięcie [V]` - u_b_U/2,
ymax = ohms$`napięcie [V]` + u_b_U/2)) +
guides(colour=FALSE) +
geom_abline(slope=0.4358291, intercept=-0.1655034, col='red', linetype = "dashed")
ggplot(ohms, aes(x=`natężenie [mA]`, y=`napięcie [V]`, colour=as.factor(`zakres napięcia`))) +
geom_point() +
labs(fill = "Zakres napięcia") +
geom_rect(aes(xmin = ohms$`natężenie [mA]` - u_b_I/2,
xmax = ohms$`natężenie [mA]` + u_b_I/2,
ymin = ohms$`napięcie [V]` - u_b_U/2,
ymax = ohms$`napięcie [V]` + u_b_U/2)) +
guides(colour=FALSE) +
geom_abline(slope=0.4184622, intercept=0.0094190, col='red', linetype = "dashed")
ggplot(ohms, aes(x=`natężenie [mA]`, y=`napięcie [V]`, colour=as.factor(`zakres napięcia`))) +
geom_point() +
labs(fill = "Zakres napięcia") +
geom_rect(aes(xmin = ohms$`natężenie [mA]` - u_b_I/2,
xmax = ohms$`natężenie [mA]` + u_b_I/2,
ymin = ohms$`napięcie [V]` - u_b_U/2,
ymax = ohms$`napięcie [V]` + u_b_U/2)) +
guides(colour=FALSE)
ggplot(ohms, aes(x=`natężenie [mA]`, y=`napięcie [V]`, colour=as.factor(`zakres napięcia`))) +
geom_point() +
labs(fill = "Zakres napięcia") +
geom_rect(aes(xmin = ohms$`natężenie [mA]` - u_b_I/2,
xmax = ohms$`natężenie [mA]` + u_b_I/2,
ymin = ohms$`napięcie [V]` - u_b_U/2,
ymax = ohms$`napięcie [V]` + u_b_U/2)) +
guides(colour=FALSE) +
geom_abline(slope=0.42742, intercept=0.0, col='red', linetype = "dashed")
resistors
ggplot(ohms, aes(x=`natężenie [mA]`, y=`napięcie [V]`, colour=as.factor(`zakres napięcia`))) +
geom_point() +
labs(fill = "Zakres napięcia") +
geom_rect(aes(xmin = ohms$`natężenie [mA]` - u_b_I/2,
xmax = ohms$`natężenie [mA]` + u_b_I/2,
ymin = ohms$`napięcie [V]` - u_b_U/2,
ymax = ohms$`napięcie [V]` + u_b_U/2)) +
guides(colour=FALSE) +
geom_abline(slope=0.4358291, intercept=-0.1655034, col='red', linetype = "dashed")
resistors
U <- sqrt(1/resistors$`natężenie [mA]`^2 * u_b_U^2 + (resistors$`napięcie [V]`/resistors$`natężenie [mA]`^2)^2 * u_b_I^2)
U
U
U <- sqrt(1/resistors$`natężenie [mA]`^2 * u_b_U^2 + (resistors$`napięcie [V]`/resistors$`natężenie [mA]`^2)^2 * u_b_I^2)
niepU <- sqrt(1/resistors$`natężenie [mA]`^2 * u_b_U^2 + (resistors$`napięcie [V]`/resistors$`natężenie [mA]`^2)^2 * u_b_I^2)
R <- resistors$`napięcie [V]`/resistors$`natężenie [mA]`
R <- resistors$`napięcie [V]`/resistors$`natężenie [mA]`
R
resistors
data
ohms
resistors
ohms
resistors
rbind(resistors, ["R4", 7.80, 18.80, 10, "20m"])
rbind(resistors, list("R4", 7.80, 18.80, 10, "20m"))
rbind(resistors, list("R4", 7.80, 18.80, 10, "20m"))
resistors
rbind(resistors, list("R4", 7.80, 18.80, 10, "20m"))
r <- (resistors, list("R4", 7.80, 18.80, 10, "20m"))
r <- rbind(resistors, list("R4", 7.80, 18.80, 10, "20m"))
r
resistors
rbind(resistors, data.frame("R4", 7.80, 18.80, 10, "20m"))
data.frame("R4", 7.80, 18.80, 10, "20m")
new_row <- data.frame("R4", 7.80, 18.80, 10, "20m")
names(new_row)
names(new_row) <- names(resistors)
rbind(resistors, new_row))
rbind(resistors, new_row)
resistors <- rbind(resistors, new_row)
U <- sqrt(1/resistors$`natężenie [mA]`^2 * u_b_U^2 + (resistors$`napięcie [V]`/resistors$`natężenie [mA]`^2)^2 * u_b_I^2)
R <- resistors$`napięcie [V]`/resistors$`natężenie [mA]`
R
knitr::kable(R)
knitr::kable(resistors)
resistors['opór'] <- R
resistors['niepewność'] <- U
U <- sqrt(1/resistors$`natężenie [mA]`^2 * u_b_U^2 + (resistors$`napięcie [V]`/resistors$`natężenie [mA]`^2)^2 * u_b_I^2)
R <- resistors$`napięcie [V]`/resistors$`natężenie [mA]`
resistors['opór'] <- R
resistors['niepewność'] <- U
U
resistors
U <- sqrt(1/resistors$`natężenie [mA]`^2 * u_b_U^2 + (resistors$`napięcie [V]`/resistors$`natężenie [mA]`^2)^2 * u_b_I^2)
U
1/resistors$`natężenie [mA]`^2
u_b_U^2
resistors
# niepewności
delta_U <- resistors$`zakres napięcia` / 100
delta_U
ohms$`zakres napięcia`
ohms$`zakres napięcia`/100
# niepewności
delta_U <- resistors$`zakres napięcia` / 100
par <- c(.2,.2,.2,.2)/2
u_b_U <- sqrt((delta_U/sqrt(3))^2 + (par/sqrt(3))^2)
u_b_U
dgt <- as.numeric(str_sub(resistors$`zakres natężenia`, end=-2))/2000
delta_I <- ifelse(resistors$`zakres natężenia` == "200m",  0.012*resistors$`natężenie [mA]`, 0.005*resistors$`natężenie [mA]`)
delta_I
u_b_I <- delta_I/sqrt(3)
u_b_I <- delta_I/sqrt(3)
U <- sqrt(1/resistors$`natężenie [mA]`^2 * u_b_U^2 + (resistors$`napięcie [V]`/resistors$`natężenie [mA]`^2)^2 * u_b_I^2)
R <- resistors$`napięcie [V]`/resistors$`natężenie [mA]`
resistors['opór'] <- R
resistors['niepewność'] <- U
knitr::kable(resistors)
resistors['opór (Ohmy)'] <- R*1000
resistors['niepewność'] <- U
knitr::kable(resistors)
resistors['opór'] <- NA
resistors['opór (Ohmy)'] <- R*1000
resistors['niepewność'] <- U
knitr::kable(resistors)
resistors['opór'] <- NULL
resistors['opór (Ohmy)'] <- R*1000
resistors['niepewność'] <- U
knitr::kable(resistors)
resistors['niepewność (Ohmy)'] <- U*1000
knitr::kable(resistors)
resistors['niepewność'] <- NULL
knitr::kable(resistors)
setwd("~/GitHub/WarsztatyBadawcze2/artykuł")
setwd("~/GitHub/WarsztatyBadawcze2/artykuł")
getwd
getwd()
